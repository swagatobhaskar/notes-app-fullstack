import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import { cookies } from "next/headers";
import { config } from '@fortawesome/fontawesome-svg-core'
import '@fortawesome/fontawesome-svg-core/styles.css'

import Header from "./components/header";
import Footer from "./components/footer";

config.autoAddCss = false

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const cookieStore = await cookies();
  const csrfToken = cookieStore.get("csrf_token")?.value;

  let email : string | null = null;
  if (cookieStore) {
    try {
      if (csrfToken) {
        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/user`, {
          headers: {
            Cookie: cookieStore.toString(),
            ...( csrfToken ? {'X-CSRF-Token': csrfToken} : {})
          },
          credentials: "include",
          cache: "no-store"
        });

        if (res.ok) {
          // console.log("HEADER res: ", res)
          const data = await res.json();
          email = data.email;
        }
      }
    } catch (err) {
      console.error("User fetch failed:", err);
    }
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased h-full m-0`}
      >
          <Header email={email}/>
          <div className="min-h-screen flex flex-col">
            {children}
          </div>
          <Footer />
      </body>
    </html>
  );
}
