"""Added one to many relation between User and Tag, making tags user-specific

Revision ID: d301209ccb14
Revises: 7d08c9821b6c
Create Date: 2025-07-08 00:30:37.543402

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd301209ccb14'
down_revision: Union[str, None] = '7d08c9821b6c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('tags', sa.Column('user_id', sa.Integer(), nullable=False))
    
    # 1️⃣ Add the user_id column as nullable
    op.add_column('tags', sa.Column('user_id', sa.Integer(), nullable=True))
    
    # 2️⃣ Optional: Backfill existing rows with a valid user_id
    # IMPORTANT: adjust to your logic!
    # Example: use user_id = 1 for all existing tags
    op.execute("UPDATE tags SET user_id = 1")  # adjust this!
    
    # op.create_unique_constraint('uq_user_tag_name', 'tags', ['user_id', 'name'])
    # op.create_foreign_key(None, 'tags', 'users', ['user_id'], ['id'])
    
    # 3️⃣ Add FK and unique constraint in batch to alter NULLABLE safely
    with op.batch_alter_table('tags') as batch_op:
        batch_op.create_foreign_key(
            'fk_tags_user_id_users',
            'users',
            ['user_id'],
            ['id']
        )
        batch_op.create_unique_constraint('uq_user_tag_name', ['user_id', 'name'])
        batch_op.alter_column('user_id', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint(None, 'tags', type_='foreignkey')
    # op.drop_constraint('uq_user_tag_name', 'tags', type_='unique')
    # op.drop_column('tags', 'user_id')

    with op.batch_alter_table('tags') as batch_op:
        batch_op.drop_constraint('fk_tags_user_id_users', type_='foreignkey')
        batch_op.drop_constraint('uq_user_tag_name', type_='unique')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
