"""Add one-to-many relation between User and Folder

Revision ID: f5433566e713
Revises: 334a6dfb97b7
Create Date: 2025-07-07 16:51:41.825120

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5433566e713'
down_revision: Union[str, None] = '334a6dfb97b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('folders', sa.Column('user_id', sa.Integer(), nullable=False))
    # op.create_foreign_key(None, 'folders', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
    
    # 1. Add column as nullable
    with op.batch_alter_table('folders') as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        
    # 2. Backfill with valid user_id
    op.execute('UPDATE folders SET user_id = 1')

    # 3. Make column non-nullable & add FK constraint
    with op.batch_alter_table('folders') as batch_op:
        batch_op.alter_column('user_id', nullable=False)
        batch_op.create_foreign_key(
            'fk_folders_user_id_users',
            'users',
            ['user_id'],
            ['id']
        )

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('folders') as batch_op:
        batch_op.drop_constraint('fk_folders_user_id_users', type_='foreignkey')
        batch_op.drop_column('user_id')
    # ### end Alembic commands ###
